interface Message {
  id: string;
  content: string;
  role: "user" | "assistant";
  timestamp: Date;
}

interface Chat {
  id: string;
  title: string;
  messages: Message[];
  lastMessage: Date;
}

// Mock API functions (replace with actual API calls later)
export const mockAPI = {
  async getChats(): Promise<Chat[]> {
    return new Promise((resolve) => {
      setTimeout(() => {
        const savedChats = localStorage.getItem("ai-chats");
        if (savedChats) {
          const parsedChats = JSON.parse(savedChats);
          // Convert timestamp strings back to Date objects
          const chatsWithDates = parsedChats.map((chat: any) => ({
            ...chat,
            lastMessage: new Date(chat.lastMessage),
            messages: chat.messages.map((msg: any) => ({
              ...msg,
              timestamp: new Date(msg.timestamp),
            })),
          }));
          resolve(chatsWithDates);
        } else {
          resolve([]);
        }
      }, 100);
    });
  },

  // Simulate creating a new chat
  async createChat(): Promise<Chat> {
    return new Promise((resolve) => {
      setTimeout(() => {
        const newChat: Chat = {
          id: Date.now().toString(),
          title: "New Chat",
          messages: [],
          lastMessage: new Date(),
        };
        resolve(newChat);
      }, 100);
    });
  },

  // Simulate sending a message to AI
  async sendMessage(message: string, chatHistory: Message[]): Promise<string> {
    return new Promise((resolve, reject) => {
      setTimeout(
        () => {
          try {
            // Simulate AI response based on the message
            const responses = [
              `I understand you're asking about "${message.slice(0, 50)}...". Let me help you with that.`,
              `That's an interesting question about "${message.slice(0, 30)}...". Here's what I think:`,
              `Based on your question about "${message.slice(0, 40)}...", I can provide some insights.`,
              `Let me break down your question about "${message.slice(0, 35)}..." step by step.`,
              `Thank you for asking about "${message.slice(0, 45)}...". Here's my perspective:`,
            ];

            const randomResponse =
              responses[Math.floor(Math.random() * responses.length)];
            const contextualResponse = `${randomResponse}\n\nThis is a simulated AI response. In a real implementation, this would be generated by an AI model based on your message and the conversation context.`;

            resolve(contextualResponse);
          } catch (error) {
            reject(new Error("Failed to get AI response"));
          }
        },
        1000 + Math.random() * 2000,
      );
    });
  },

  // Simulate deleting a chat
  async deleteChat(chatId: string): Promise<void> {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve();
      }, 100);
    });
  },

  // Simulate updating chat title
  async updateChatTitle(chatId: string, title: string): Promise<void> {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve();
      }, 100);
    });
  },
};

// Export types for use in other files
export type { Message, Chat };
